<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='COVID19-Testedpopulationbycounties2642020Estonia' path='/workbooks' revision='1.4' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tests_by_county' inline='true' name='federated.0cnbswr05xpqfe18dznt40pm1t8z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tests_by_county' name='textscan.0f5dgwb1nrlqvx12jx2rd0ixjlm2'>
            <connection class='textscan' directory='C:/Users/olexa/OneDrive/Documents/GitHub/BOLD.19-20/lecture 2 - open_data_practical/datasets' filename='tests_by_county.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0f5dgwb1nrlqvx12jx2rd0ixjlm2' name='tests_by_county.csv' table='[tests_by_county#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='CountyName' ordinal='1' />
            <column datatype='string' name='ShortName' ordinal='2' />
            <column datatype='integer' name='PopulationCount' ordinal='3' />
            <column datatype='integer' name='TestsCount' ordinal='4' />
            <column datatype='real' name='TestedPopulation' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountyName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountyName]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>CountyName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ShortName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ShortName]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>ShortName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PopulationCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PopulationCount]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>PopulationCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TestsCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TestsCount]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>TestsCount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TestedPopulation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TestedPopulation]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>TestedPopulation</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='County Name' datatype='string' name='[CountyName]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Population Count' datatype='integer' name='[PopulationCount]' role='measure' type='quantitative' />
      <column caption='Short Name' datatype='string' name='[ShortName]' role='dimension' type='nominal' />
      <column caption='Tested Population (%)' datatype='real' name='[TestedPopulation]' role='measure' type='quantitative' />
      <column caption='Tests Count' datatype='integer' name='[TestsCount]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, CountyName'>
          <field>[Country]</field>
          <field>[CountyName]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/olexa/OneDrive/Documents/My Tableau Repository/Datasources/tests_by_county.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/26/2020 02:19:24 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='tests_by_county' increment-value='%null%' refresh-type='create' rows-inserted='15' timestamp-start='2020-04-26 14:19:24.035' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>CountyName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CountyName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CountyName</remote-alias>
              <ordinal>0</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ShortName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ShortName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ShortName</remote-alias>
              <ordinal>1</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PopulationCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PopulationCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PopulationCount</remote-alias>
              <ordinal>2</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TestsCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TestsCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TestsCount</remote-alias>
              <ordinal>3</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TestedPopulation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TestedPopulation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TestedPopulation</remote-alias>
              <ordinal>4</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>5</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.429008' measure-ordering='alphabetic' measure-percentage='0.570992' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Estonia&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='TestsByCounties'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID-19: Tested population by counties, 26/04/20</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tests_by_county' name='federated.0cnbswr05xpqfe18dznt40pm1t8z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cnbswr05xpqfe18dznt40pm1t8z'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='County Name' datatype='string' name='[CountyName]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Population Count' datatype='integer' name='[PopulationCount]' role='measure' type='quantitative' />
            <column caption='Tested Population (%)' datatype='real' name='[TestedPopulation]' role='measure' type='quantitative' />
            <column-instance column='[PopulationCount]' derivation='Attribute' name='[attr:PopulationCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TestedPopulation]' derivation='Attribute' name='[attr:TestedPopulation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[CountyName]' derivation='None' name='[none:CountyName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Longitude (generated)]' field-type='quantitative' max='3353633.0184046971' min='2318433.7923846734' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Latitude (generated)]' field-type='quantitative' max='8348851.1525510093' min='7847596.7959989216' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[none:Country:nk]' />
              <lod column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[none:CountyName:nk]' />
              <color column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[attr:TestedPopulation:qk]' />
              <text column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[attr:PopulationCount:qk]' />
              <geometry column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Latitude (generated)]</rows>
        <cols>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8AE7830E-6B01-442F-87E2-607F3EA92D1F}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' maximized='true' name='TestsByCounties'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[attr:TestedPopulation:qk]</field>
            <field>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[none:Country:nk]</field>
            <field>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[none:CountyName:nk]</field>
            <field>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[none:ShortName:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8888CC72-8BEA-4369-82C5-FE2A3E0AD07C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='TestsByCounties' width='192'>
      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
      nHKwp6OrdQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
