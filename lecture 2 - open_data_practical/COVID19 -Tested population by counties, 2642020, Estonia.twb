<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='COVID19-Testedpopulationbycounties2642020Estonia' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tests_by_county' inline='true' name='federated.0cnbswr05xpqfe18dznt40pm1t8z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tests_by_county' name='textscan.0f5dgwb1nrlqvx12jx2rd0ixjlm2'>
            <connection class='textscan' directory='C:/Users/olexa/Desktop/OpenDataPractical' filename='tests_by_county.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0f5dgwb1nrlqvx12jx2rd0ixjlm2' name='tests_by_county.csv' table='[tests_by_county#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='CountyName' ordinal='1' />
            <column datatype='string' name='ShortName' ordinal='2' />
            <column datatype='integer' name='PopulationCount' ordinal='3' />
            <column datatype='integer' name='TestsCount' ordinal='4' />
            <column datatype='real' name='TestedPopulation' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountyName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountyName]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>CountyName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ShortName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ShortName]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>ShortName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PopulationCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PopulationCount]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>PopulationCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TestsCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TestsCount]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>TestsCount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TestedPopulation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TestedPopulation]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>TestedPopulation</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[tests_by_county.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='County Name' datatype='string' name='[CountyName]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Population Count' datatype='integer' name='[PopulationCount]' role='measure' type='quantitative' />
      <column caption='Short Name' datatype='string' name='[ShortName]' role='dimension' type='nominal' />
      <column caption='Tested Population(%)' datatype='real' name='[TestedPopulation]' role='measure' type='quantitative' />
      <column caption='Tests Count' datatype='integer' name='[TestsCount]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, CountyName'>
          <field>[Country]</field>
          <field>[CountyName]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/olexa/OneDrive/Documents/My Tableau Repository/Datasources/tests_by_county.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/26/2020 01:51:34 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='tests_by_county' increment-value='%null%' refresh-type='create' rows-inserted='15' timestamp-start='2020-04-26 13:51:34.257' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CountyName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CountyName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CountyName</remote-alias>
              <ordinal>1</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ShortName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ShortName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ShortName</remote-alias>
              <ordinal>2</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PopulationCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PopulationCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PopulationCount</remote-alias>
              <ordinal>3</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TestsCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TestsCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TestsCount</remote-alias>
              <ordinal>4</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TestedPopulation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TestedPopulation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TestedPopulation</remote-alias>
              <ordinal>5</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>6</ordinal>
              <family>tests_by_county.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.429008' measure-ordering='alphabetic' measure-percentage='0.570992' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Estonia&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='TestsByCounties'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tested population, by counties</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tests_by_county' name='federated.0cnbswr05xpqfe18dznt40pm1t8z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cnbswr05xpqfe18dznt40pm1t8z'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='County Name' datatype='string' name='[CountyName]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Population Count' datatype='integer' name='[PopulationCount]' role='measure' type='quantitative' />
            <column caption='Tested Population(%)' datatype='real' name='[TestedPopulation]' role='measure' type='quantitative' />
            <column-instance column='[PopulationCount]' derivation='Attribute' name='[attr:PopulationCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TestedPopulation]' derivation='Attribute' name='[attr:TestedPopulation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[CountyName]' derivation='None' name='[none:CountyName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PopulationCount]' derivation='Sum' name='[sum:PopulationCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Longitude (generated)]' field-type='quantitative' max='3322473.925141667' min='2313685.2943411157' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Latitude (generated)]' field-type='quantitative' max='8381429.8828175282' min='7786981.7923645237' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Latitude (generated)]' field-type='quantitative' fold='true' max='8381429.8828175282' min='7786981.7923645237' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <size column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[sum:PopulationCount:qk]' />
              <color column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[sum:PopulationCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[none:Country:nk]' />
              <lod column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[none:CountyName:nk]' />
              <color column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[attr:TestedPopulation:qk]' />
              <text column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[attr:PopulationCount:qk]' />
              <geometry column='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0cnbswr05xpqfe18dznt40pm1t8z].[Latitude (generated)] + [federated.0cnbswr05xpqfe18dznt40pm1t8z].[Latitude (generated)])</rows>
        <cols>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8AE7830E-6B01-442F-87E2-607F3EA92D1F}' />
    </worksheet>
    <worksheet name='TestsByGender'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{773EE586-0161-4409-9E60-74ED1E80C58D}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='TestsByCounties'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0cnbswr05xpqfe18dznt40pm1t8z].[attr:TestedPopulation:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[attr:TestedPopulation:qk]</field>
            <field>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[none:Country:nk]</field>
            <field>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[none:CountyName:nk]</field>
            <field>[federated.0cnbswr05xpqfe18dznt40pm1t8z].[none:ShortName:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8888CC72-8BEA-4369-82C5-FE2A3E0AD07C}' />
    </window>
    <window class='worksheet' maximized='true' name='TestsByGender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AB88A49C-30E5-4EBA-87B5-871D45E0109F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='TestsByCounties' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TestsByGender' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
